# urbverde-ui/.github/workflows/fix-paths.yml
name: Fix FilePath First-Line Comments

on:
  pull_request:
    types: 
      - opened
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  fix_paths:
    name: Correct First-Line FilePath Comments
    runs-on: ubuntu-latest
    
    steps:
      - name: Get branch name
        id: branch-name
        run: |
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.branch-name.outputs.branch }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}  # Explicitly use GITHUB_TOKEN

      - name: Setup Git User
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git checkout ${{ steps.branch-name.outputs.branch }}

      - name: Run Pathme Logic Inline
        run: |
          PARENT_NAME="$(basename "$(git rev-parse --show-toplevel 2>/dev/null)")"
          if [[ -z "$PARENT_NAME" ]]; then
            DIR_NAME="$(basename "$PWD")"
            echo "Could not determine parent name. Defaulting to $DIR_NAME."
            PARENT_NAME="$DIR_NAME"
          fi

          (echo ".gitignore"; git ls-files | grep -vE '^\.github/workflows/') | while read -r FILE; do
            # Skip if file doesn't exist or is empty
            [ ! -f "$FILE" ] && continue
            [ ! -s "$FILE" ] && continue

            EXT="${FILE##*.}"
            BASENAME="$(basename "$FILE")"

            if [[ "$BASENAME" == ".gitignore" || "$EXT" =~ ^(go|js|ts|html|vue|css|sh|env|yml|yaml|dockerfile|md)$ ]]; then
              if [[ "$BASENAME" == ".gitignore" ]]; then
                COMMENT="# $PARENT_NAME/$BASENAME"
              elif [[ "$EXT" =~ ^(html|vue|md)$ ]]; then
                COMMENT="<!-- $PARENT_NAME/$FILE -->"
              elif [[ "$EXT" == "css" ]]; then
                COMMENT="/* $PARENT_NAME/$FILE */"
              elif [[ "$EXT" =~ ^(sh|env|yml|yaml|dockerfile)$ ]]; then
                COMMENT="# $PARENT_NAME/$FILE"
              else
                COMMENT="// $PARENT_NAME/$FILE"
              fi

              FIRST_LINE="$(head -n 1 "$FILE" 2>/dev/null)"
              if [[ "$FIRST_LINE" =~ ^([/#<!*]+).*[/[:alnum:]]+/$BASENAME ]]; then
                if [[ "$FIRST_LINE" != "$COMMENT" ]]; then
                  sed -i "1s|.*|$COMMENT|" "$FILE"
                  echo "Updated wrong path: $FILE"
                fi
              elif ! grep -q "^$COMMENT" "$FILE" 2>/dev/null; then
                echo -e "$COMMENT\n$(cat "$FILE")" > "$FILE"
                echo "Inserted missing path: $FILE"
              fi
            fi
          done

      - name: Commit and Push Changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "ðŸ¤– AUTOMATIC CORRECTION: added first-line filepath comments (GitHub Action)"
            git push origin ${{ steps.branch-name.outputs.branch }}
          else
            echo "No path corrections needed."
          fi
